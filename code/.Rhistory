df<- read.csv('simple-report3.csv')
import tidyverse
library(tidyverse)
boxplot(df$Sold.Price)
?substring
substring('abcd123', 1, 6)
substring('abcd123', 1, 3)
table_summary = df%>%
select(postal_code, Sold.Price)%>%
mutate(fsa = substring(postal_code, 1, 3))%>%
select(fsa, Sold.Price)%>%
group_by(fsa)%>%
summarise(avg_price = mean(Sold.Price),
min_price = min(Sold.Price))
table_summary
table_summary = df%>%
select(postal_code, Sold.Price)%>%
mutate(fsa = substring(postal_code, 1, 3))%>%
select(fsa, Sold.Price)%>%
group_by(fsa)%>%
summarise(avg_price = mean(Sold.Price),
min_price = min(Sold.Price)
units = n())
table_summary = df%>%
select(postal_code, Sold.Price)%>%
mutate(fsa = substring(postal_code, 1, 3))%>%
select(fsa, Sold.Price)%>%
group_by(fsa)%>%
summarise(avg_price = mean(Sold.Price),
min_price = min(Sold.Price),
units = n())
table_summary
View(table_summary)
plot(density(df$Sold.Price), main="Density Plot: Sold Price",
ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(df$Sold.Price), 2)))
polygon(density(df.Sold.Price), col="blue")
polygon(density(df$Sold.Price), col="blue")
View(df)
linearMod <- lm(Sold.Price ~ List.Price, data=df)
print(linearMod)
summary(linearMod)
list_ofvar = names(df)
list_ofvar
list_ofvar[0]
list_ofvar[1]
list_of_vars<-names(df)
list_of_vars<-list_of_vars%>%select(-Sold.Price)
list_of_vars<-list_of_vars[-Sold.Price]
list_of_vars<-list_of_vars[-'Sold.Price']
length(df)
list_of_vars<-names(df)
data_names = names(df)
#creating independent variable
for(i in 1:(length(df)-1){
x_variable = paste(data_names[i], '+')
}
for(i in 1:(length(df)-1)){
x_variable = paste(data_names[i], sep = '+')
}
x_variable
for(i in 1:(length(df)-1)){
x_variable =+ paste(data_names[i], sep = '+')
}
for(i in 1:(length(df)-1)){
x_variable += paste(data_names[i], sep = '+')
}
x_variable = ''
for(i in 1:(length(df)-1)){
x_variable = paste(x_variable, data_names[i], sep = '+')
}
x_variable
library(corrplot)
install.packages('corrplot')
library(corrplot)
corrplot(cor(df), method='ellipse')
cor(df)
x_variable = 'Sold.Price ~ '
for(i in 1:(length(df)-1)){
x_variable = paste(x_variable, data_names[i], sep = '+')
}
x_variable
typeof(data_names)
data_names
linearMod <- lm(Sold.Price ~ List.Price+Basement.Development, data=df)
summary(linearMod)
data_names
df<- df%>%
select('Sold Price', 'Basement Development','Baths Full', 'Beds Total',
'Building Type', 'Community', 'Construction Type', 'Exterior', 'Front Exposure',
'Goods Included', 'Heating Fuel', 'List Price', 'Parking', 'Property Type',
'Style', 'Tax Amount', 'Tot Flr Area A.G. (SF)', 'Total Parking', 'Yr Built',
'day_sold', 'dom', 'postal_code')
df<- df%>%
select('Sold.Price', 'Basement Development','Baths Full', 'Beds Total',
'Building Type', 'Community', 'Construction Type', 'Exterior', 'Front Exposure',
'Goods Included', 'Heating Fuel', 'List Price', 'Parking', 'Property Type',
'Style', 'Tax Amount', 'Tot Flr Area A.G. (SF)', 'Total Parking', 'Yr Built',
'day_sold', 'dom', 'postal_code')
df<- df%>%
select('Sold.Price', 'Basement.Development','Baths.Full', 'Beds.Total',
'Building.Type', 'Community', 'Construction.Type', 'Exterior', 'Front.Exposure',
'Goods.Included', 'Heating.Fuel', 'List Price', 'Parking', 'Property.Type',
'Style', 'Tax.Amount', 'Tot.Flr Area.A.G.(SF)', 'Total.Parking', 'Yr.Built',
'day_sold', 'dom', 'postal_code')
df<- df%>%
select('Sold.Price', 'Basement.Development','Baths.Full', 'Beds.Total',
'Building.Type', 'Community', 'Construction.Type', 'Exterior', 'Front.Exposure',
'Goods.Included', 'Heating.Fuel', 'List.Price', 'Parking', 'Property.Type',
'Style', 'Tax.Amount', 'Tot.Flr Area.A.G.(SF)', 'Total.Parking', 'Yr.Built',
'day_sold', 'dom', 'postal_code')
df<- df%>%
select('Sold.Price', 'Basement.Development','Baths.Full', 'Beds.Total',
'Building.Type', 'Community', 'Construction.Type', 'Exterior', 'Front.Exposure',
'Goods.Included', 'Heating.Fuel', 'List.Price', 'Parking', 'Property.Type',
'Style', 'Tax.Amount', 'Tot.Flr.Area.A.G.(SF)', 'Total.Parking', 'Yr.Built',
'day_sold', 'dom', 'postal_code')
data_names
df<- read.csv('simple-report3.csv')
rm df
rm(df)
df<- read.csv('simple-report3.csv')
View(df)
df<- read.csv('simple-report3.csv')
View(df)
df<- read.csv('simple-report3.csv')
View(df)
rm(df)
df<- read.csv('simple-report3.csv')
data_names = names(df)
x_variable = paste(data_names[1], '~', data_names[2:13], sep = '+')
data_size = len(df)
data_size = length(df)
data_size
regression_function = paste(data_names[1], '~', data_names[2:data_size], sep = '+')
regression_function
regression_function = paste(data_names[1], '~', paste(data_names[2:data_size], sep = '+'))
regression_function
regression_function = paste(data_names[1], '~', paste(data_names[2:data_size], collapse = '+'))
regression_function
regression_function = as.formula(regression_function)
linearMod <- lm(regression_function, data=df)
summary(linearMod)
print(linearMod)
linearMod <- glm(regression_function, data=df)
out <- capture.output(summary(linearMod))
cat("My title", out, file="regression_output.txt", sep="n", append=TRUE)
cat("My title", out, file="regression_output.txt", sep="\n", append=TRUE)
regression_function = paste(data_names[1], '~', paste(data_names[2:4], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
print(linearMod)
summary(linearMod)
regression_function = paste(data_names[1], '~', paste(data_names[2:6], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
print(linearMod)
summary(linearMod)
df<- df%>%
mutate(Basement.Development = case_when(
grepl(Basement.Development, 'Finished') ~'Finished',
TRUE ~ 'Unfinished'
)))
df<- df%>%
mutate(Basement.Development = case_when(
grepl(Basement.Development, 'Finished') ~'Finished',
TRUE ~ 'Unfinished'
))
df<- df%>%
mutate(Basement.Development = case_when(
grepl(Basement.Development, 'Finished') ~'Finished',
!grepl(Basement.Development, 'Finished') ~ 'Unfinished'
))
?grepl
df<- df%>%
mutate(Basement.Development = case_when(
grepl('Finished', Basement.Development) ~'Finished',
!grepl('Finished', Basement.Development) ~ 'Unfinished'
))
data_names = names(df)
data_size = length(df)
regression_function = paste(data_names[1], '~', paste(data_names[2:6], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
print(linearMod)
summary(linearMod)
formula
regression_function
linearMod <- glm(regression_function, data=df)
df<- df%>%
mutate(Basement.Development = case_when(
grepl('Finished', Basement.Development) ~'Finished',
!grepl('Finished', Basement.Development) ~ 'Unfinished'
))%>%
mutate(Basement.Development= as.factor(Basement.Development))
regression_function = paste(data_names[1], '~', paste(data_names[2:6], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
df<- read.csv('simple-report3.csv')
View(df)
df_to_use<- read.csv('simple-report3.csv')
df<- df_to_use%>%
select(-Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style)
data_names = names(df)
data_size = length(df)
regression_function = paste(data_names[1], '~', paste(data_names[2:6], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
print(linearMod)
summary(linearMod)
View(df_to_use)
df<- df_to_use%>%
select(-Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
regression_function = paste(data_names[1], '~', paste(data_names[2:data_size], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
data_names
regression_function
regression_function = paste(data_names[2], '~', paste(data_names[3:data_size], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
print(linearMod)
summary(linearMod)
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore'
TRUE ~ 'Other'
))%>%
select(-Community, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore'
TRUE ~ 'Other'
))%>%
select(-Community, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore'
TRUE ~ 'Other'))
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore',
TRUE ~ 'Other'))%>%
select(-Community, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
regression_function = paste(data_names[2], '~', paste(data_names[3:data_size], collapse = '+'))
regression_function = as.formula(regression_function)
regression_function
linearMod <- glm(regression_function, data=df)
data_names = names(df)
data_size = length(df)
regression_function = paste(data_names[2], '~', paste(data_names[3:data_size], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
summary(linearMod)
View(df)
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore',
TRUE ~ 'Other'))%>%
select(-Community, -Front.Exposure, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore',
TRUE ~ 'Other'))%>%
select(-X, -Community, -Front.Exposure, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
data_names = names(df)
data_size = length(df)
regression_function = paste(data_names[1], '~', paste(data_names[2:data_size], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
#print(linearMod)
summary(linearMod)
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore',
TRUE ~ 'Other'))%>%
select(-X, -Building.Type, -Beds.Total, - Tax.Amount, -Yr.Built, -Community, -Front.Exposure, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
data_names = names(df)
data_size = length(df)
regression_function = paste(data_names[1], '~', paste(data_names[2:data_size], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
#print(linearMod)
summary(linearMod)
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore',
TRUE ~ 'Other'))%>%
select(-X, -Property.Type, -Building.Type, -Beds.Total, - Tax.Amount, -Yr.Built, -Community, -Front.Exposure, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
data_names = names(df)
data_size = length(df)
regression_function = paste(data_names[1], '~', paste(data_names[2:data_size], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=df)
#print(linearMod)
summary(linearMod)
print(linearMod)
testing<- read.csv('C:\\localhost\\99-Personal\\Internal Applications\\go_properly\\training.csv')
testing<- testing%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore',
TRUE ~ 'Other'))%>%
select(-X, -Property.Type, -Building.Type, -Beds.Total, - Tax.Amount, -Yr.Built, -Community, -Front.Exposure, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
test$sold_price_new<-predict(linearMod, type = "response", newdata= test)
testing$sold_price_new<-predict(linearMod, type = "response", newdata= testing)
pred<-abs((round(testing$sold_price_new)-testing$Sold.Price)/testing$Sold.Price)
pred_table<-table(round(pred,2))
print(paste("Prediction Table for validation", i))
print(pred_table)
pred_table
c<-table(factor(round(testing$sold_price_new),levels=3:8), testing$Sold.Price)
print(paste("Confusion Matrix for validation", i))
print(c)
i=i+1
}
plot(pred)
clean_dataframe<-function(df){
df<- df_to_use%>%
mutate(altadore = case_when(
grepl('Altadore', Community) ~ 'Altadore',
TRUE ~ 'Other'))%>%
select(-X, -Property.Type, -Building.Type, -Beds.Total, - Tax.Amount, -Yr.Built, -Community, -Front.Exposure, -Basement.Development, -Construction.Type, -Exterior, -Goods.Included, -Heating.Fuel,
-Parking, -Style, -day_sold, -postal_code, -Tot.Flr.Area.A.G...SF.)
return(df)
}
training<- read.csv('simple-report3.csv')
training<- clean_dataframe(training)
testing<- read.csv('C:\\localhost\\99-Personal\\Internal Applications\\go_properly\\training.csv')
testing<- clean_dataframe(testing)
concatenate_files <- function(directory, ids) {
# locate the files
files <- list.files(directory, full.names=T)[ids]
# read the files into a list of data.frames
data.list <- lapply(files, read.csv)
# concatenate into one big data.frame
data.cat <- do.call(rbind, data.list)
return(data.cat)
# aggregate
# data.agg <- aggregate(value ~ index, data.cat, mean)
}
path = 'C:\\localhost\\99-Personal\\Internal Applications\\go_properly\\Scraper\\new_data'
concatenate_files(path, 1)
df<-concatenate_files(path, 1)
View(df)
View(df_to_use)
path = 'go_properly\\Scraper\\new_data'
df<-concatenate_files(path, 1)
setwd("C:/localhost/99-Personal/Internal Applications/go_properly")
setwd("C:/localhost/99-Personal/Internal Applications/go_properly")
path = 'Scraper\\new_data'
training<- read.csv(path&'file_2.csv')
training<- read.csv(paste(path, 'file_2.csv'))
training<- read.csv(paste(path, '\\file_2.csv'))
training<- read.csv(paste(path,'\\file_2.csv'))
training<- read.csv(paste(path,'//file_2.csv'))
training<- read.csv(paste(path,'\\file_2.csv'))
paste(path,'\\file_2.csv')
training<- read.csv(paste(path,'\\file_2.csv', collapse = ''))
path
training<- read.csv(paste(path,'file_2.csv'))
paste(path,'file_2.csv', sep='')
training<- read.csv(paste(path,'\\file_2.csv', sep=''))
#loading training data where we will perform the modeling
training<- read.csv(paste(path,'\\file_1.csv', sep=''))
training<- clean_dataframe(training)
boxplot(training$Sold.Price)
#check if selling price is normal distribuited
plot(density(training$Sold.Price), main="Density Plot: Sold Price",
ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(training$Sold.Price), 2)))
polygon(density(training$Sold.Price), col="blue")
#multilinear regression
data_names = names(training)
data_size = length(training)
regression_function = paste(data_names[1], '~', paste(data_names[2:data_size], collapse = '+'))
regression_function = as.formula(regression_function)
linearMod <- glm(regression_function, data=training)
#print(linearMod)
summary(linearMod)
?saveRDS
saveRDS(testing, 'testing.RDS')
